dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer", "hartelijke", "hartelijk",
"groeten", "j.o", "johan", "horten", "elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge"", "groet")
pattern <- c("gods", "drã_bak")
replacement <- c("god", "drobak")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
#similarity
tstat_dist <- as.dist(textstat_dist(dfmmat))
clust <- hclust(tstat_dist)
plot(clust, xlab = "Distance", ylab = NULL)
# keyness (relateive frequencies)
tstat_key <- textstat_keyness(dfmmat)
textplot_keyness(tstat_key)
#*********************************************************************************
token_sr <- tokens(
corpus_sdg,
split_hyphens = TRUE,
remove_numbers = TRUE,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_separators = TRUE,
include_docvars = TRUE
)
tokens_sr_nostop <- tokens_select(token_sr, pattern = stopwords("nl"), selection = "remove")
print(tokens_sr_nostop)
toks_ngram <- tokens_ngrams(tokens_sr_nostop, n = 2:4)
toks_ngram
#look-up dictionary
dict <- dictionary(file = "dict_sdg_targets.yml")
dict_tokens_sr <- tokens_lookup(token_sr, dictionary = dict, levels = 1)
sr_dfm <- dfm(tokens_SV_nostop)
sr_dfm
topfeatures(sr_dfm, 20)
dfm_trim(sr_dfm, max_termfreq = 0.95, termfreq_type = "quantile" )
head(dfm_trim,20)
dfm_trim
#tokenize AR
token_ar <- tokens(
corpus_ar,
split_hyphens = TRUE,
remove_numbers = TRUE,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_separators = TRUE,
include_docvars = TRUE
)
tokens_ar_nostop <- tokens_select(token_ar, pattern = stopwords("en"), selection = "remove")
print(tokens_ar_nostop)
#look-up dictionary
dict <- dictionary(file = "dict_sdg_targets.yml")
dict <- dictionary(list(TAG = c("tax")))
dict_tokens <- tokens_lookup(tokens_ar_nostop, dictionary = dict, levels = 2)
mydfm <- dfm(dict_tokens)
topfeatures(mydfm, 20)
dfm_year <- dfm_group(mydfm, groups = year)
head(dfm_year, 20)
set.seed(1, sample.kind = "Rounding")
textplot_network(sr_dfm, omit_isolated = FALSE,
edge_color = "#1F78B4",
edge_alpha = 0.5,
edge_size = 2,
vertex_color = "#4D4D4D",
vertex_size = 2,
vertex_labelcolor = NULL,
vertex_labelfont = NULL,
vertex_labelsize = 5,
offset = NULL,
)
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet")
pattern <- c("gods", "drã_bak")
replacement <- c("god", "drobak")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet", "vrede")
pattern <- c("gods", "drã_bak")
replacement <- c("god", "drobak")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet", "vrede", "levens")
pattern <- c("gods", "drã_bak")
replacement <- c("god", "drobak")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet", "vrede",
"levens", "bedankt")
pattern <- c("gods", "drã_bak")
replacement <- c("god", "drobak")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
#similarity
tstat_dist <- as.dist(textstat_dist(dfmmat))
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
#overzicht
table(data_SV$title, data_SV$author)
# totaal aantal woorden
ntoken(tokens_SV_nostop)
# totaal aantal woorden
table(ntoken(tokens_SV_nostop))
# totaal aantal woorden
tabulate(ntoken(tokens_SV_nostop))
# totaal aantal woorden
ntoken(tokens_SV_nostop)
# totaal aantal woorden
summary(ntoken(tokens_SV_nostop))
ndoc(tokens_SV_nostop)
my_lda_fit20 <- stm(dfmmat, K = 20, verbose = FALSE)
#Topic analysis
set.seed(100)
if (require("stm")) {
my_lda_fit20 <- stm(dfmmat, K = 20, verbose = FALSE)
plot(my_lda_fit20)
}
?stm
#or
SV_lda <-
topicmodels::LDA(
dfmmat,
k = 20,
method = "Gibbs",
control = list(seed = 1965, verbose = 0)
)
topicmodels::topics(SV_lda)
#turn into dataframe
lda_topics <- tidytext::tidy(SV_lda, matrix = "beta")
top_terms <- lda_topics %>%
dplyr::group_by(topic) %>%
dplyr::top_n(10, beta) %>%
dplyr::ungroup() %>%
dplyr::arrange(topic, -beta)
#plot beta probability
top_terms %>%
dplyr::mutate(term = reorder(term, beta)) %>%
ggplot2::ggplot(ggplot2::aes(term, beta, fill = factor(topic))) +
ggplot2::geom_col(show.legend = FALSE) +
ggplot2::facet_wrap(~ topic, scales = "free") +
ggplot2::coord_flip() +
ggthemes::theme_economist_white()
#or
SV_lda <-
topicmodels::LDA(
dfmmat,
k = 10,
method = "Gibbs",
control = list(seed = 1965, verbose = 0)
)
topicmodels::topics(SV_lda)
#turn into dataframe
lda_topics <- tidytext::tidy(SV_lda, matrix = "beta")
top_terms <- lda_topics %>%
dplyr::group_by(topic) %>%
dplyr::top_n(10, beta) %>%
dplyr::ungroup() %>%
dplyr::arrange(topic, -beta)
#plot beta probability
top_terms %>%
dplyr::mutate(term = reorder(term, beta)) %>%
ggplot2::ggplot(ggplot2::aes(term, beta, fill = factor(topic))) +
ggplot2::geom_col(show.legend = FALSE) +
ggplot2::facet_wrap(~ topic, scales = "free") +
ggplot2::coord_flip() +
ggthemes::theme_economist_white()
top_terms
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet", "vrede",
"levens", "bedankt", "zo'n", "œ", "œede", "wanneer", "immers", "nee")
pattern <- c("gods", "drã_bak", "broeders")
replacement <- c("god", "drobak", "broeder")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
#overzicht
table(data_SV$title, data_SV$author)
# totaal aantal woorden
ntoken(tokens_SV_nostop)
ndoc(tokens_SV_nostop)
#similarity
tstat_dist <- as.dist(textstat_dist(dfmmat))
clust <- hclust(tstat_dist)
plot(clust, xlab = "Distance", ylab = NULL)
#Topic analysis
set.seed(100)
if (require("stm")) {
my_lda_fit20 <- stm(dfmmat, K = 20, verbose = FALSE)
plot(my_lda_fit20)
}
#or
SV_lda <-
topicmodels::LDA(
dfmmat,
k = 10,
method = "Gibbs",
control = list(seed = 1965, verbose = 0)
)
topicmodels::topics(SV_lda)
#turn into dataframe
lda_topics <- tidytext::tidy(SV_lda, matrix = "beta")
top_terms <- lda_topics %>%
dplyr::group_by(topic) %>%
dplyr::top_n(10, beta) %>%
dplyr::ungroup() %>%
dplyr::arrange(topic, -beta)
#plot beta probability
top_terms %>%
dplyr::mutate(term = reorder(term, beta)) %>%
ggplot2::ggplot(ggplot2::aes(term, beta, fill = factor(topic))) +
ggplot2::geom_col(show.legend = FALSE) +
ggplot2::facet_wrap(~ topic, scales = "free") +
ggplot2::coord_flip() +
ggthemes::theme_economist_white()
stopwordsNL <- c(stoplijst, "â", "des", "ã",  "n", "onze", "hen", "wij",
"we", "wel", "alle", "alleen", "komt", "zullen", "moeten",
"zoals", "zegt", "gaat", "komen", "zegt", "zulke",
"b.v.", "b.v", "m.a.w.", "m.a.w",  "i.p.v.", "i.p.v",  "kr", "daarom", "staat", "zodat",
"MatteÃ", "MatteÃ_s", "s", "br", "Â", "Matt", "Â", "smith", "geliefde", "broer",
"hartelijke", "hartelijk", "groeten", "j.o", "johan", "horten",
"elias", "aslaksen", "ter", "wille", "fijne", "brief", "dank", "moge", "groet", "vrede",
"levens", "bedankt", "zo'n", "œ", "œde", "wanneer", "immers", "nee", "slechts",
"elke", "zichzelf", "zeer")
pattern <- c("gods", "drã_bak", "broeders", "jezusâ")
replacement <- c("god", "drobak", "broeder", "jezus")
tokens_SV_nostop <- tokens_remove(tokens_SV_nostop, stopwordsNL)
tokens_SV_nostop <- tokens_replace(tokens_SV_nostop, pattern = pattern, replacement = replacement)
tokens_SV_stemmed <- tokens_wordstem(tokens_SV_nostop, language = "nld")
dfmmat <- dfm(tokens_SV_nostop)
tstat_freq <- textstat_frequency(dfmmat, n = 10, groups = author)
tstat_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Frequency") +
theme_linedraw() +
facet_wrap(. ~ group)
#n-grams
toks_ngram <- tokens_ngrams(tokens_SV_nostop, n = 2:4)
head(toks_ngram[[1]], 40)
ngram_freq <- textstat_frequency(dfm(toks_ngram), n = 20, groups = author)
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group)
#overzicht
table(data_SV$title, data_SV$author)
# totaal aantal woorden
ntoken(tokens_SV_nostop)
ndoc(tokens_SV_nostop)
#similarity
tstat_dist <- as.dist(textstat_dist(dfmmat))
clust <- hclust(tstat_dist)
plot(clust, xlab = "Distance", ylab = NULL)
#Topic analysis
set.seed(100)
if (require("stm")) {
my_lda_fit20 <- stm(dfmmat, K = 20, verbose = FALSE)
plot(my_lda_fit20)
}
#or
SV_lda <-
topicmodels::LDA(
dfmmat,
k = 10,
method = "Gibbs",
control = list(seed = 1965, verbose = 0)
)
topicmodels::topics(SV_lda)
#turn into dataframe
lda_topics <- tidytext::tidy(SV_lda, matrix = "beta")
top_terms <- lda_topics %>%
dplyr::group_by(topic) %>%
dplyr::top_n(10, beta) %>%
dplyr::ungroup() %>%
dplyr::arrange(topic, -beta)
#plot beta probability
top_terms %>%
dplyr::mutate(term = reorder(term, beta)) %>%
ggplot2::ggplot(ggplot2::aes(term, beta, fill = factor(topic))) +
ggplot2::geom_col(show.legend = FALSE) +
ggplot2::facet_wrap(~ topic, scales = "free") +
ggplot2::coord_flip() +
ggthemes::theme_economist_white()
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group) +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = 2))
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group) +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = 4))
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group) +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = 6))
ngram_freq %>%
ggplot(aes(x = reorder(feature, frequency), y = frequency)) +
geom_point() +
labs(x = NULL, y = "Frequency") +
coord_flip() +
theme_linedraw() +
facet_wrap(. ~ group) +
theme(axis.title = element_text(size = rel(2)),
axis.text = element_text(size = 5))
# totaal aantal woorden
ntoken(tokens_SV_nostop)
# totaal aantal woorden
nt <- ntoken(tokens_SV_nostop)
# totaal aantal woorden
nt <- ntoken(tokens_SV_nostop) %>% as.data.frame()
View(nt)
View(nt)
colnames(nt) <- c("titel", "aantal tokens")
str(nt)
colnames(nt) <- c("aantal tokens")
nt
table(nt)
colnames(nt) <- c("aantal_tokens")
sum(nt$aantal_tokens)
